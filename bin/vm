#!/bin/bash

############## Set this to where you have installed vm ###############

VM_INSTALL_DIR=/usr/local/vm

############## NO CONFIGURABLE PARTS BEYOND THIS POINT ###############

if [ -z "$VM_LIB" ]; then VM_LIB="$VM_INSTALL_DIR/lib"; fi

VM_VARS="$VM_LIB/../variables.txt"

if [ ! -f "$VM_VARS" ]; then
        echo "vm: no installation found in '$VM_LIB'" 1>&2
        exit 1
fi

BASENAME=`which basename 2> /dev/null`

if [ "$BASENAME" = "" ]; then 
    echo "vm: either your PATH is set to something not" \
        "entirely wholesome:" \
        "'$PATH' or you don't have the coreutils package installed" 2>&1
    exit 1
fi

VM_CMD=$1
shift

KNOWN="start stop kill status cmd run init archive sh"

if [ -z $VM_CMD ]; then
        for i in $KNOWN; do US="$US | $i"; done
        echo usage: vm \{${US## |} \} 2>&1
        exit 1
fi

if [ "$1" = "-h" -o "$1" = "--help" ]; then
    . $VM_LIB/functions.sh
else
    . $VM_LIB/init.sh
    . $VM_CONFIG
fi

if [ ! -f $VM_CONFIG ]; then vm_die configuration file \'$VM_CONFIG\' not present in current directory; fi

function export_vars()
{
    `grep ^VM_ "$VM_VARS" | \
        while read line; do echo export $line; done`
}

case $VM_CMD in
    start|stop|kill|status|cmd|run|init|archive)
                . $VM_LIB/vm-$VM_CMD-options.sh
                . $VM_LIB/vm-$VM_CMD.sh $*
        ;;
    sh)
        shift
        export_vars

        if [ "$SHELL" = "" ]; then export SHELL=bash; fi

        echo "Entering interactive mode; type 'exit' to quit."
        $SHELL $*
        ;;
    *)
        VM_HOME="$VM_HOME_ORIGIN"

        export_vars

        cd "$VM_CALLING_DIR"

        if [ -f "$VM_CMD" ];
        then
            (echo "VM_PARAMS=\"$*\"; . $VM_LIB/functions.sh"; awk 'NR > 1 { print }' $VM_CMD) | \
                (cd "$VM_HOME"; bash)
        else
                vm_die unknown command \'$VM_CMD\', must be one of $KNOWN
        fi
    ;;
esac
